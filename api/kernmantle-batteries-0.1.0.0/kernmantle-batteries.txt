-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Several utilities to make real-life workflows with kernmantle
--   
--   Please see the README on GitHub at
--   <a>https://github.com/YPares/kernmantle#readme</a>
@package kernmantle-batteries
@version 0.1.0.0

module Control.Kernmantle.Parallel

-- | A version of <a>Kleisli</a> for which (***) and traverse' compute in
--   parallel
newtype PKleisli m a b
PKleisli :: (a -> m b) -> PKleisli m a b
[runPKleisli] :: PKleisli m a b -> a -> m b

-- | Just a flipped variant of runPKleisli
performP :: a -> PKleisli m a b -> m b
instance (Control.Monad.Catch.MonadCatch m, GHC.Exception.Type.Exception ex) => Control.Kernmantle.Error.TryEffect ex (Control.Kernmantle.Parallel.PKleisli m)
instance (Control.Monad.Catch.MonadThrow m, GHC.Exception.Type.Exception ex) => Control.Kernmantle.Error.ThrowEffect ex (Control.Kernmantle.Parallel.PKleisli m)
instance Data.Profunctor.Trans.SieveTrans m (Control.Kernmantle.Parallel.PKleisli m)
instance Control.Monad.Fix.MonadFix m => Data.Profunctor.Strong.Costrong (Control.Kernmantle.Parallel.PKleisli m)
instance GHC.Base.Monad m => Data.Profunctor.Choice.Choice (Control.Kernmantle.Parallel.PKleisli m)
instance GHC.Base.Monad m => Data.Profunctor.Strong.Strong (Control.Kernmantle.Parallel.PKleisli m)
instance GHC.Base.Monad m => Data.Profunctor.Unsafe.Profunctor (Control.Kernmantle.Parallel.PKleisli m)
instance GHC.Base.Monad m => Control.Category.Category (Control.Kernmantle.Parallel.PKleisli m)
instance Control.Monad.IO.Unlift.MonadUnliftIO m => Control.Arrow.ArrowChoice (Control.Kernmantle.Parallel.PKleisli m)
instance (Control.Monad.IO.Unlift.MonadUnliftIO m, Control.Monad.Fix.MonadFix m) => Control.Arrow.ArrowLoop (Control.Kernmantle.Parallel.PKleisli m)
instance (Control.Monad.IO.Unlift.MonadUnliftIO m, GHC.Base.MonadPlus m) => Control.Arrow.ArrowZero (Control.Kernmantle.Parallel.PKleisli m)
instance (Control.Monad.IO.Unlift.MonadUnliftIO m, GHC.Base.MonadPlus m) => Control.Arrow.ArrowPlus (Control.Kernmantle.Parallel.PKleisli m)
instance Control.Monad.IO.Unlift.MonadUnliftIO m => Control.Arrow.Arrow (Control.Kernmantle.Parallel.PKleisli m)
instance Control.Monad.IO.Unlift.MonadUnliftIO m => Data.Profunctor.Traversing.Traversing (Control.Kernmantle.Parallel.PKleisli m)
instance Control.Monad.IO.Unlift.MonadUnliftIO m => Data.Profunctor.Mapping.Mapping (Control.Kernmantle.Parallel.PKleisli m)
instance Control.Monad.IO.Unlift.MonadUnliftIO m => Data.Profunctor.Closed.Closed (Control.Kernmantle.Parallel.PKleisli m)
